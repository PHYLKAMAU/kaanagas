# Generated by Django 5.2.3 on 2025-06-17 11:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('order_update', 'Order Update'), ('payment_update', 'Payment Update'), ('delivery_update', 'Delivery Update'), ('system_update', 'System Update'), ('promotion', 'Promotion'), ('reminder', 'Reminder')], max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('send_push', models.BooleanField(default=True)),
                ('send_email', models.BooleanField(default=False)),
                ('send_sms', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'core_notification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rating_type', models.CharField(choices=[('vendor', 'Vendor Rating'), ('rider', 'Rider Rating'), ('order', 'Order Rating')], max_length=10)),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('review', models.TextField(blank=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'core_rating',
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'System Setting',
                'verbose_name_plural': 'System Settings',
                'db_table': 'core_system_settings',
            },
        ),
        migrations.CreateModel(
            name='GasProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('gas_type', models.CharField(choices=[('lpg', 'LPG (Liquefied Petroleum Gas)'), ('industrial', 'Industrial Gas'), ('cooking', 'Cooking Gas')], default='lpg', max_length=20)),
                ('cylinder_size', models.CharField(choices=[('3kg', '3 KG'), ('6kg', '6 KG'), ('13kg', '13 KG'), ('50kg', '50 KG')], max_length=10)),
                ('brand', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('weight_empty', models.DecimalField(decimal_places=2, help_text='Empty cylinder weight in KG', max_digits=5)),
                ('weight_full', models.DecimalField(decimal_places=2, help_text='Full cylinder weight in KG', max_digits=5)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('refill_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'core_gas_product',
                'indexes': [models.Index(fields=['gas_type', 'cylinder_size'], name='core_gas_pr_gas_typ_41445e_idx'), models.Index(fields=['is_active'], name='core_gas_pr_is_acti_c9daaa_idx')],
                'unique_together': {('gas_type', 'cylinder_size', 'brand')},
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='e.g., Home, Office, Shop', max_length=100)),
                ('address_line_1', models.CharField(max_length=200)),
                ('address_line_2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=10)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('landmark', models.CharField(blank=True, max_length=200)),
                ('instructions', models.TextField(blank=True, help_text='Delivery instructions')),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'core_location',
            },
        ),
    ]
