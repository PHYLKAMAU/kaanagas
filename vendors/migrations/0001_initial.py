# Generated by Django 5.2.3 on 2025-06-17 11:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VendorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business_name', models.CharField(max_length=200)),
                ('business_type', models.CharField(choices=[('retailer', 'Gas Retailer'), ('refill_station', 'Refill Station'), ('both', 'Retailer & Refill Station')], default='retailer', max_length=20)),
                ('business_registration_number', models.CharField(max_length=50, unique=True)),
                ('tax_pin', models.CharField(blank=True, max_length=20)),
                ('business_address', models.TextField()),
                ('business_phone', models.CharField(max_length=17)),
                ('business_email', models.EmailField(blank=True, max_length=254)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('operating_hours_start', models.TimeField()),
                ('operating_hours_end', models.TimeField()),
                ('operating_days', models.CharField(default='monday-sunday', help_text='Operating days of the week', max_length=20)),
                ('delivery_radius', models.IntegerField(default=5, help_text='Delivery radius in kilometers', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('minimum_order_amount', models.DecimalField(decimal_places=2, default=0, help_text='Minimum order amount for delivery', max_digits=10)),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=0, help_text='Standard delivery fee', max_digits=8)),
                ('storage_capacity', models.IntegerField(blank=True, help_text='Storage capacity in cylinders (for refill stations)', null=True)),
                ('daily_refill_capacity', models.IntegerField(blank=True, help_text='Maximum refills per day', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('active', 'Active'), ('suspended', 'Suspended'), ('deactivated', 'Deactivated')], default='pending', max_length=20)),
                ('verification_documents', models.FileField(blank=True, upload_to='vendor_docs/')),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('total_orders', models.IntegerField(default=0)),
                ('completed_orders', models.IntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_ratings', models.IntegerField(default=0)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=5.0, help_text='Commission rate percentage', max_digits=5)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'vendor'}, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_profile', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'admin'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_vendors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'vendors_profile',
            },
        ),
        migrations.CreateModel(
            name='VendorInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('current_stock', models.IntegerField(default=0)),
                ('reserved_stock', models.IntegerField(default=0)),
                ('minimum_stock', models.IntegerField(default=5)),
                ('maximum_stock', models.IntegerField(default=100)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('refill_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('auto_reorder', models.BooleanField(default=False)),
                ('reorder_level', models.IntegerField(default=10)),
                ('last_restocked', models.DateTimeField(blank=True, null=True)),
                ('total_sold', models.IntegerField(default=0)),
                ('gas_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.gasproduct')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='vendors.vendorprofile')),
            ],
            options={
                'db_table': 'vendors_inventory',
            },
        ),
        migrations.CreateModel(
            name='VendorHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('open_time', models.TimeField()),
                ('close_time', models.TimeField()),
                ('is_closed', models.BooleanField(default=False)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operating_hours', to='vendors.vendorprofile')),
            ],
            options={
                'db_table': 'vendors_hours',
            },
        ),
        migrations.CreateModel(
            name='VendorBankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bank_name', models.CharField(max_length=100)),
                ('account_name', models.CharField(max_length=200)),
                ('account_number', models.CharField(max_length=50)),
                ('branch', models.CharField(blank=True, max_length=100)),
                ('swift_code', models.CharField(blank=True, max_length=20)),
                ('mpesa_number', models.CharField(blank=True, max_length=17)),
                ('mpesa_name', models.CharField(blank=True, max_length=100)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='vendors.vendorprofile')),
            ],
            options={
                'db_table': 'vendors_bank_account',
            },
        ),
        migrations.CreateModel(
            name='VendorPromotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('promotion_type', models.CharField(choices=[('percentage', 'Percentage Discount'), ('fixed_amount', 'Fixed Amount Discount'), ('buy_one_get_one', 'Buy One Get One'), ('free_delivery', 'Free Delivery')], max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('minimum_order_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('maximum_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('usage_limit', models.IntegerField(blank=True, help_text='Maximum number of uses', null=True)),
                ('usage_limit_per_customer', models.IntegerField(default=1)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('total_used', models.IntegerField(default=0)),
                ('applicable_products', models.ManyToManyField(blank=True, help_text='Leave empty for all products', to='core.gasproduct')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotions', to='vendors.vendorprofile')),
            ],
            options={
                'db_table': 'vendors_promotion',
            },
        ),
        migrations.AddIndex(
            model_name='vendorprofile',
            index=models.Index(fields=['status'], name='vendors_pro_status_37c160_idx'),
        ),
        migrations.AddIndex(
            model_name='vendorprofile',
            index=models.Index(fields=['business_type'], name='vendors_pro_busines_70ad6f_idx'),
        ),
        migrations.AddIndex(
            model_name='vendorprofile',
            index=models.Index(fields=['latitude', 'longitude'], name='vendors_pro_latitud_11b6aa_idx'),
        ),
        migrations.AddIndex(
            model_name='vendorprofile',
            index=models.Index(fields=['average_rating'], name='vendors_pro_average_e46361_idx'),
        ),
        migrations.AddIndex(
            model_name='vendorinventory',
            index=models.Index(fields=['vendor', 'is_available'], name='vendors_inv_vendor__07ce6e_idx'),
        ),
        migrations.AddIndex(
            model_name='vendorinventory',
            index=models.Index(fields=['current_stock'], name='vendors_inv_current_814531_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vendorinventory',
            unique_together={('vendor', 'gas_product')},
        ),
        migrations.AlterUniqueTogether(
            name='vendorhours',
            unique_together={('vendor', 'day')},
        ),
        migrations.AddIndex(
            model_name='vendorbankaccount',
            index=models.Index(fields=['vendor', 'is_primary'], name='vendors_ban_vendor__f5757c_idx'),
        ),
        migrations.AddIndex(
            model_name='vendorpromotion',
            index=models.Index(fields=['vendor', 'is_active'], name='vendors_pro_vendor__dfe3bd_idx'),
        ),
        migrations.AddIndex(
            model_name='vendorpromotion',
            index=models.Index(fields=['start_date', 'end_date'], name='vendors_pro_start_d_8f53f8_idx'),
        ),
    ]
