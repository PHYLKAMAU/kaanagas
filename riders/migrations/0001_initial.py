# Generated by Django 5.2.3 on 2025-06-17 11:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('assigned', 'Assigned'), ('accepted', 'Accepted'), ('picking_up', 'Picking Up'), ('in_transit', 'In Transit'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='assigned', max_length=20)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('picked_up_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('pickup_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('pickup_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('delivery_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('delivery_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('estimated_distance', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('actual_distance', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('estimated_duration', models.IntegerField(blank=True, help_text='Estimated duration in minutes', null=True)),
                ('actual_duration', models.IntegerField(blank=True, help_text='Actual duration in minutes', null=True)),
                ('base_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('distance_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('time_bonus', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('pickup_verification_code', models.CharField(blank=True, max_length=6)),
                ('delivery_verification_code', models.CharField(blank=True, max_length=6)),
                ('customer_signature', models.ImageField(blank=True, null=True, upload_to='signatures/')),
                ('pickup_notes', models.TextField(blank=True)),
                ('delivery_notes', models.TextField(blank=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='delivery', to='orders.order')),
            ],
            options={
                'db_table': 'riders_delivery',
                'ordering': ['-assigned_at'],
            },
        ),
        migrations.CreateModel(
            name='RiderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id_number', models.CharField(max_length=20, unique=True)),
                ('driving_license_number', models.CharField(max_length=50, unique=True)),
                ('date_of_birth', models.DateField()),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_phone', models.CharField(max_length=17)),
                ('emergency_contact_relationship', models.CharField(max_length=50)),
                ('vehicle_type', models.CharField(choices=[('motorcycle', 'Motorcycle'), ('bicycle', 'Bicycle'), ('car', 'Car'), ('truck', 'Truck'), ('van', 'Van')], max_length=20)),
                ('vehicle_registration', models.CharField(max_length=20, unique=True)),
                ('vehicle_make', models.CharField(max_length=50)),
                ('vehicle_model', models.CharField(max_length=50)),
                ('vehicle_year', models.IntegerField()),
                ('vehicle_color', models.CharField(max_length=30)),
                ('insurance_policy_number', models.CharField(max_length=50)),
                ('insurance_expiry', models.DateField()),
                ('license_expiry', models.DateField()),
                ('service_areas', models.TextField(help_text='Areas where rider operates (comma separated)')),
                ('max_delivery_distance', models.IntegerField(default=10, help_text='Maximum delivery distance in kilometers', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('active', 'Active'), ('offline', 'Offline'), ('busy', 'Busy'), ('suspended', 'Suspended'), ('deactivated', 'Deactivated')], default='pending', max_length=20)),
                ('is_available', models.BooleanField(default=False)),
                ('current_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('current_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('last_location_update', models.DateTimeField(blank=True, null=True)),
                ('total_deliveries', models.IntegerField(default=0)),
                ('successful_deliveries', models.IntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_ratings', models.IntegerField(default=0)),
                ('average_delivery_time', models.IntegerField(default=0, help_text='Average delivery time in minutes')),
                ('commission_rate', models.DecimalField(decimal_places=2, default=10.0, help_text='Commission rate percentage per delivery', max_digits=5)),
                ('verification_documents', models.FileField(blank=True, upload_to='rider_docs/')),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'rider'}, on_delete=django.db.models.deletion.CASCADE, related_name='rider_profile', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, limit_choices_to={'role': 'admin'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_riders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'riders_profile',
            },
        ),
        migrations.CreateModel(
            name='RiderPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=10)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_orders_assigned', models.IntegerField(default=0)),
                ('total_orders_accepted', models.IntegerField(default=0)),
                ('total_orders_completed', models.IntegerField(default=0)),
                ('total_orders_failed', models.IntegerField(default=0)),
                ('total_online_hours', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('total_delivery_time', models.IntegerField(default=0, help_text='Total delivery time in minutes')),
                ('average_delivery_time', models.IntegerField(default=0, help_text='Average delivery time in minutes')),
                ('total_distance', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_ratings_received', models.IntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_records', to='riders.riderprofile')),
            ],
            options={
                'db_table': 'riders_performance',
                'ordering': ['-period_start'],
            },
        ),
        migrations.CreateModel(
            name='RiderLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('accuracy', models.FloatField(blank=True, help_text='GPS accuracy in meters', null=True)),
                ('speed', models.FloatField(blank=True, help_text='Speed in km/h', null=True)),
                ('is_during_delivery', models.BooleanField(default=False)),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_updates', to='riders.delivery')),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_history', to='riders.riderprofile')),
            ],
            options={
                'db_table': 'riders_location',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RiderIncentive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('incentive_type', models.CharField(choices=[('daily_target', 'Daily Delivery Target'), ('weekly_target', 'Weekly Delivery Target'), ('rating_bonus', 'High Rating Bonus'), ('peak_hours', 'Peak Hours Bonus'), ('distance_bonus', 'Long Distance Bonus'), ('new_rider', 'New Rider Bonus')], max_length=20)),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('one_time', 'One Time')], max_length=10)),
                ('minimum_deliveries', models.IntegerField(default=0)),
                ('minimum_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('minimum_distance', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('target_areas', models.TextField(blank=True, help_text='Specific areas for incentive')),
                ('reward_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('is_percentage', models.BooleanField(default=False, help_text='If true, reward_amount is percentage of earnings')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('applicable_to_all', models.BooleanField(default=True)),
                ('specific_riders', models.ManyToManyField(blank=True, related_name='specific_incentives', to='riders.riderprofile')),
            ],
            options={
                'db_table': 'riders_incentive',
            },
        ),
        migrations.CreateModel(
            name='RiderEarnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('earning_type', models.CharField(choices=[('delivery', 'Delivery Fee'), ('bonus', 'Performance Bonus'), ('incentive', 'Daily/Weekly Incentive'), ('tip', 'Customer Tip'), ('adjustment', 'Manual Adjustment')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('description', models.TextField(blank=True)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('paid', 'Paid'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('earning_date', models.DateField()),
                ('payment_period', models.CharField(blank=True, help_text='e.g., 2024-W01, 2024-01', max_length=20)),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='riders.delivery')),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='riders.riderprofile')),
            ],
            options={
                'db_table': 'riders_earnings',
                'ordering': ['-earning_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RiderBankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bank_name', models.CharField(max_length=100)),
                ('account_name', models.CharField(max_length=200)),
                ('account_number', models.CharField(max_length=50)),
                ('branch', models.CharField(blank=True, max_length=100)),
                ('mpesa_number', models.CharField(blank=True, max_length=17)),
                ('mpesa_name', models.CharField(blank=True, max_length=100)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='riders.riderprofile')),
            ],
            options={
                'db_table': 'riders_bank_account',
            },
        ),
        migrations.CreateModel(
            name='RiderAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('rider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_schedule', to='riders.riderprofile')),
            ],
            options={
                'db_table': 'riders_availability',
            },
        ),
        migrations.AddField(
            model_name='delivery',
            name='rider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='riders.riderprofile'),
        ),
        migrations.AddIndex(
            model_name='riderprofile',
            index=models.Index(fields=['status', 'is_available'], name='riders_prof_status_17a89a_idx'),
        ),
        migrations.AddIndex(
            model_name='riderprofile',
            index=models.Index(fields=['current_latitude', 'current_longitude'], name='riders_prof_current_d6983c_idx'),
        ),
        migrations.AddIndex(
            model_name='riderprofile',
            index=models.Index(fields=['average_rating'], name='riders_prof_average_238393_idx'),
        ),
        migrations.AddIndex(
            model_name='riderperformance',
            index=models.Index(fields=['rider', 'period_type'], name='riders_perf_rider_i_e6600c_idx'),
        ),
        migrations.AddIndex(
            model_name='riderperformance',
            index=models.Index(fields=['period_start', 'period_end'], name='riders_perf_period__6fd051_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='riderperformance',
            unique_together={('rider', 'period_type', 'period_start')},
        ),
        migrations.AddIndex(
            model_name='riderlocation',
            index=models.Index(fields=['rider', 'created_at'], name='riders_loca_rider_i_b94509_idx'),
        ),
        migrations.AddIndex(
            model_name='riderlocation',
            index=models.Index(fields=['delivery', 'created_at'], name='riders_loca_deliver_14ec99_idx'),
        ),
        migrations.AddIndex(
            model_name='riderincentive',
            index=models.Index(fields=['incentive_type', 'is_active'], name='riders_ince_incenti_179036_idx'),
        ),
        migrations.AddIndex(
            model_name='riderincentive',
            index=models.Index(fields=['start_date', 'end_date'], name='riders_ince_start_d_bc5487_idx'),
        ),
        migrations.AddIndex(
            model_name='riderearnings',
            index=models.Index(fields=['rider', 'payment_status'], name='riders_earn_rider_i_c1369d_idx'),
        ),
        migrations.AddIndex(
            model_name='riderearnings',
            index=models.Index(fields=['earning_date'], name='riders_earn_earning_f9c8d3_idx'),
        ),
        migrations.AddIndex(
            model_name='riderearnings',
            index=models.Index(fields=['payment_period'], name='riders_earn_payment_bbb987_idx'),
        ),
        migrations.AddIndex(
            model_name='riderbankaccount',
            index=models.Index(fields=['rider', 'is_primary'], name='riders_bank_rider_i_9bfeee_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rideravailability',
            unique_together={('rider', 'day')},
        ),
        migrations.AddIndex(
            model_name='delivery',
            index=models.Index(fields=['rider', 'status'], name='riders_deli_rider_i_1953e4_idx'),
        ),
        migrations.AddIndex(
            model_name='delivery',
            index=models.Index(fields=['status', 'assigned_at'], name='riders_deli_status_fd73a4_idx'),
        ),
    ]
