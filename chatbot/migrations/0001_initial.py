# Generated by Django 5.2.3 on 2025-06-17 11:37

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatbotAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metric_type', models.CharField(choices=[('daily', 'Daily Metrics'), ('weekly', 'Weekly Metrics'), ('monthly', 'Monthly Metrics')], max_length=10)),
                ('date', models.DateField()),
                ('total_sessions', models.IntegerField(default=0)),
                ('active_sessions', models.IntegerField(default=0)),
                ('completed_sessions', models.IntegerField(default=0)),
                ('abandoned_sessions', models.IntegerField(default=0)),
                ('transferred_sessions', models.IntegerField(default=0)),
                ('total_messages', models.IntegerField(default=0)),
                ('user_messages', models.IntegerField(default=0)),
                ('bot_messages', models.IntegerField(default=0)),
                ('average_session_duration', models.FloatField(default=0.0)),
                ('average_response_time', models.FloatField(default=0.0)),
                ('intent_recognition_accuracy', models.FloatField(default=0.0)),
                ('total_ratings', models.IntegerField(default=0)),
                ('average_rating', models.FloatField(default=0.0)),
                ('positive_feedback', models.IntegerField(default=0)),
                ('negative_feedback', models.IntegerField(default=0)),
                ('top_intents', models.JSONField(blank=True, null=True)),
                ('unhandled_queries', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'chatbot_analytics',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['metric_type', 'date'], name='chatbot_ana_metric__d49b72_idx')],
                'unique_together': {('metric_type', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ChatbotIntent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('intent_name', models.CharField(max_length=100, unique=True)),
                ('intent_type', models.CharField(choices=[('greeting', 'Greeting'), ('order_status', 'Order Status Inquiry'), ('place_order', 'Place New Order'), ('find_vendor', 'Find Vendors'), ('pricing', 'Price Inquiry'), ('complaint', 'File Complaint'), ('support', 'General Support'), ('account', 'Account Management'), ('payment', 'Payment Issues'), ('goodbye', 'Goodbye')], max_length=20)),
                ('description', models.TextField()),
                ('training_phrases', models.TextField(help_text='Training phrases for this intent (one per line)')),
                ('response_templates', models.TextField(help_text='Response templates (one per line, bot will randomly select)')),
                ('requires_authentication', models.BooleanField(default=False)),
                ('next_intent', models.CharField(blank=True, max_length=100)),
                ('requires_human_handoff', models.BooleanField(default=False)),
                ('required_context', models.JSONField(blank=True, help_text='Required context parameters', null=True)),
                ('context_to_collect', models.JSONField(blank=True, help_text='Context parameters to collect from user', null=True)),
                ('usage_count', models.IntegerField(default=0)),
                ('success_rate', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=True)),
                ('confidence_threshold', models.FloatField(default=0.7)),
            ],
            options={
                'db_table': 'chatbot_intent',
                'ordering': ['intent_name'],
                'indexes': [models.Index(fields=['intent_type', 'is_active'], name='chatbot_int_intent__2b9e15_idx'), models.Index(fields=['usage_count'], name='chatbot_int_usage_c_29490f_idx')],
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('channel', models.CharField(choices=[('web', 'Web Platform'), ('whatsapp', 'WhatsApp'), ('mobile_app', 'Mobile App')], default='web', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('ended', 'Ended'), ('transferred', 'Transferred to Human')], default='active', max_length=20)),
                ('anonymous_id', models.CharField(blank=True, max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=17)),
                ('user_intent', models.CharField(blank=True, max_length=100)),
                ('current_flow', models.CharField(blank=True, max_length=50)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('transferred_to_human', models.BooleanField(default=False)),
                ('transfer_reason', models.TextField(blank=True)),
                ('user_satisfaction', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('feedback_text', models.TextField(blank=True)),
                ('human_agent', models.ForeignKey(blank=True, limit_choices_to={'role': 'admin'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_chats', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chatbot_session',
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('message_type', models.CharField(choices=[('user', 'User Message'), ('bot', 'Bot Message'), ('system', 'System Message'), ('human', 'Human Agent Message')], max_length=10)),
                ('message_format', models.CharField(choices=[('text', 'Plain Text'), ('quick_reply', 'Quick Reply Buttons'), ('card', 'Card/Rich Media'), ('list', 'List Options'), ('location', 'Location Request'), ('image', 'Image'), ('file', 'File Attachment')], default='text', max_length=20)),
                ('content', models.TextField()),
                ('structured_content', models.JSONField(blank=True, null=True)),
                ('intent', models.CharField(blank=True, max_length=100)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('entities', models.JSONField(blank=True, null=True)),
                ('response_time', models.FloatField(blank=True, help_text='Response time in seconds', null=True)),
                ('ai_model_used', models.CharField(blank=True, max_length=50)),
                ('is_read', models.BooleanField(default=False)),
                ('user_reaction', models.CharField(blank=True, choices=[('helpful', 'Helpful'), ('not_helpful', 'Not Helpful'), ('unclear', 'Unclear')], max_length=20)),
                ('sequence_number', models.IntegerField()),
                ('external_message_id', models.CharField(blank=True, max_length=100)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chatbot.chatsession')),
            ],
            options={
                'db_table': 'chatbot_message',
                'ordering': ['session', 'sequence_number'],
            },
        ),
        migrations.CreateModel(
            name='ChatbotFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('feedback_type', models.CharField(choices=[('message', 'Message Feedback'), ('session', 'Session Feedback'), ('feature', 'Feature Request'), ('bug', 'Bug Report')], max_length=10)),
                ('rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('comment', models.TextField(blank=True)),
                ('issue_category', models.CharField(blank=True, max_length=100)),
                ('is_resolved', models.BooleanField(default=False)),
                ('admin_response', models.TextField(blank=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('responded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chatbot_feedback_responses', to=settings.AUTH_USER_MODEL)),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='chatbot.chatmessage')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='chatbot.chatsession')),
            ],
            options={
                'db_table': 'chatbot_feedback',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatbotKnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('content_type', models.CharField(choices=[('faq', 'Frequently Asked Question'), ('procedure', 'Step-by-step Procedure'), ('policy', 'Company Policy'), ('product_info', 'Product Information'), ('troubleshooting', 'Troubleshooting Guide')], max_length=20)),
                ('question', models.TextField(help_text='Question or trigger phrase')),
                ('answer', models.TextField(help_text='Response content')),
                ('alternative_questions', models.TextField(blank=True, help_text='Alternative ways to ask the same question (one per line)')),
                ('keywords', models.TextField(blank=True, help_text='Keywords for better matching (comma separated)')),
                ('category', models.CharField(blank=True, max_length=100)),
                ('subcategory', models.CharField(blank=True, max_length=100)),
                ('has_rich_content', models.BooleanField(default=False)),
                ('rich_content', models.JSONField(blank=True, null=True)),
                ('usage_count', models.IntegerField(default=0)),
                ('positive_feedback', models.IntegerField(default=0)),
                ('negative_feedback', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=50, help_text='Higher numbers = higher priority')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_kb_articles', to=settings.AUTH_USER_MODEL)),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_kb_articles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chatbot_knowledge_base',
                'ordering': ['-priority', 'title'],
                'indexes': [models.Index(fields=['content_type', 'is_active'], name='chatbot_kno_content_a2b8d4_idx'), models.Index(fields=['category', 'subcategory'], name='chatbot_kno_categor_c880d1_idx'), models.Index(fields=['usage_count'], name='chatbot_kno_usage_c_45b27c_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['user', 'status'], name='chatbot_ses_user_id_e41827_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['channel', 'status'], name='chatbot_ses_channel_901ef5_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['last_activity'], name='chatbot_ses_last_ac_d9c9b6_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['session', 'sequence_number'], name='chatbot_mes_session_258422_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['message_type', 'created_at'], name='chatbot_mes_message_7fe23b_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['intent'], name='chatbot_mes_intent_75b83f_idx'),
        ),
        migrations.AddIndex(
            model_name='chatbotfeedback',
            index=models.Index(fields=['feedback_type', 'rating'], name='chatbot_fee_feedbac_d63582_idx'),
        ),
        migrations.AddIndex(
            model_name='chatbotfeedback',
            index=models.Index(fields=['is_resolved'], name='chatbot_fee_is_reso_8439eb_idx'),
        ),
    ]
