# Generated by Django 5.2.3 on 2025-06-17 11:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address_type', models.CharField(choices=[('home', 'Home'), ('work', 'Work'), ('business', 'Business'), ('other', 'Other')], default='home', max_length=10)),
                ('label', models.CharField(help_text="e.g., Home, Office, John's Place", max_length=100)),
                ('address_line_1', models.CharField(max_length=200)),
                ('address_line_2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=10)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('landmark', models.CharField(blank=True, max_length=200)),
                ('delivery_instructions', models.TextField(blank=True)),
                ('gate_code', models.CharField(blank=True, max_length=50)),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('times_used', models.IntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customers_address',
            },
        ),
        migrations.CreateModel(
            name='CustomerCylinder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('serial_number', models.CharField(max_length=50, unique=True)),
                ('brand', models.CharField(max_length=50)),
                ('size', models.CharField(max_length=10)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('empty', 'Empty'), ('refilling', 'Being Refilled'), ('damaged', 'Damaged'), ('lost', 'Lost'), ('returned', 'Returned')], default='active', max_length=20)),
                ('current_fill_level', models.IntegerField(default=100, help_text='Fill level percentage (0-100)')),
                ('last_refill_date', models.DateTimeField(blank=True, null=True)),
                ('current_location', models.CharField(blank=True, help_text='Where the cylinder currently is', max_length=200)),
                ('is_with_customer', models.BooleanField(default=True)),
                ('last_inspection_date', models.DateField(blank=True, null=True)),
                ('next_inspection_due', models.DateField(blank=True, null=True)),
                ('safety_certificate', models.FileField(blank=True, null=True, upload_to='cylinder_certs/')),
                ('total_refills', models.IntegerField(default=0)),
                ('total_cost_spent', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
            options={
                'db_table': 'customers_cylinder',
            },
        ),
        migrations.CreateModel(
            name='CustomerFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('favorite_type', models.CharField(choices=[('vendor', 'Vendor'), ('product', 'Product')], max_length=10)),
                ('times_ordered', models.IntegerField(default=0)),
                ('last_ordered', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customers_favorite',
            },
        ),
        migrations.CreateModel(
            name='CustomerPaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_type', models.CharField(choices=[('mpesa', 'M-Pesa'), ('card', 'Credit/Debit Card'), ('bank_account', 'Bank Account')], max_length=20)),
                ('label', models.CharField(help_text='e.g., Personal M-Pesa, Work Card', max_length=100)),
                ('mpesa_number', models.CharField(blank=True, max_length=17)),
                ('card_last_four', models.CharField(blank=True, max_length=4)),
                ('card_type', models.CharField(blank=True, max_length=20)),
                ('card_token', models.CharField(blank=True, max_length=200)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('account_number_masked', models.CharField(blank=True, max_length=50)),
                ('is_default', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('times_used', models.IntegerField(default=0)),
                ('total_amount_spent', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customers_payment_method',
            },
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer_type', models.CharField(choices=[('individual', 'Individual'), ('business', 'Business'), ('restaurant', 'Restaurant'), ('institution', 'Institution')], default='individual', max_length=20)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('business_name', models.CharField(blank=True, max_length=200)),
                ('business_registration', models.CharField(blank=True, max_length=50)),
                ('tax_pin', models.CharField(blank=True, max_length=20)),
                ('preferred_gas_size', models.CharField(blank=True, max_length=10)),
                ('preferred_brand', models.CharField(blank=True, max_length=50)),
                ('preferred_delivery_time', models.CharField(blank=True, max_length=50)),
                ('default_delivery_instructions', models.TextField(blank=True)),
                ('total_orders', models.IntegerField(default=0)),
                ('completed_orders', models.IntegerField(default=0)),
                ('cancelled_orders', models.IntegerField(default=0)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('loyalty_points', models.IntegerField(default=0)),
                ('membership_tier', models.CharField(choices=[('bronze', 'Bronze'), ('silver', 'Silver'), ('gold', 'Gold'), ('platinum', 'Platinum')], default='bronze', max_length=20)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('promotional_messages', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('blocked_reason', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'customers_profile',
            },
        ),
        migrations.CreateModel(
            name='CustomerComplaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('complaint_id', models.CharField(max_length=20, unique=True)),
                ('complaint_type', models.CharField(choices=[('delivery', 'Delivery Issue'), ('product', 'Product Quality'), ('payment', 'Payment Issue'), ('vendor', 'Vendor Service'), ('rider', 'Rider Behavior'), ('app', 'App/Technical Issue'), ('other', 'Other')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution', models.TextField(blank=True)),
                ('satisfaction_rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('satisfaction_feedback', models.TextField(blank=True)),
                ('assigned_to', models.ForeignKey(blank=True, limit_choices_to={'role': 'admin'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_complaints', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaints', to='orders.order')),
            ],
            options={
                'db_table': 'customers_complaint',
                'ordering': ['-created_at'],
            },
        ),
    ]
